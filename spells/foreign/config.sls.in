#!r6rs
;;; config.sls.in --- FFI platform configuration.

;; Copyright (C) 2009, 2010, 2015 Andreas Rottmann <a.rottmann@gmx.at>

;; Author: Andreas Rottmann <a.rottmann@gmx.at>

;; This program is free software, you can redistribute it and/or
;; modify it under the terms of the new-style BSD license.

;; You should have received a copy of the BSD license along with this
;; program. If not, see <http://www.debian.org/misc/bsd.license>.

;;; Commentary:

;; This file is intended to be processed by conjure's configure
;; mechanism, substituting the placeholders.

;;; Code:

(library (spells foreign config)
  (export c-type-sizeof c-type-alignof)
  (import (rnrs base)
          (rnrs lists))

  (define (c-type-sizeof sym)
    (let ((size
           (case sym
             ((char uchar int8 uint8)     1)
             ((int16 uint16)              2)
             ((int32 uint32)              4)
             ((int64 uint64)              8)
             ((short ushort)   #!@(c-sizeof short))
             ((int uint)       #!@(c-sizeof int))
             ((long ulong)     #!@(c-sizeof long))
             ((llong ullong)   #!@(c-sizeof (long long)))
             ((pointer)        #!@(c-sizeof (void *)))
             ((float)          #!@(c-sizeof float))
             ((double)         #!@(c-sizeof double))
             ((size_t ssize_t) #!@(c-sizeof size_t "stddef.h"))
             ((time_t)         #!@(c-sizeof time_t "time.h"))
             (else #f))))
      (or size
          (assertion-violation 'c-type-sizeof
                               "size of type unknown" sym))))

  (define (c-type-alignof sym)
    (let ((alignment
           (case sym
             ((char uchar int8 uint8)     #!@(c-alignof char))
             ((int16 uint16)              #!@(c-alignof int16_t "stdint.h"))
             ((int32 uint32)              #!@(c-alignof int32_t "stdint.h"))
             ((int64 uint64)              #!@(c-alignof int64_t "stdint.h"))
             ((short ushort)   #!@(c-alignof short))
             ((int uint)       #!@(c-alignof int))
             ((long ulong)     #!@(c-alignof long))
             ((llong ullong)   #!@(c-alignof (long long)))
             ((pointer)        #!@(c-alignof (void *)))
             ((float)          #!@(c-alignof float))
             ((double)         #!@(c-alignof double))
             ((size_t ssize_t) #!@(c-alignof size_t "stddef.h"))
             ((time_t)         #!@(c-alignof time_t "time.h"))
             (else #f))))
      (or alignment
          (assertion-violation 'c-type-alignof
                               "alignment of type unknown" sym)))))

;; Local Variables:
;; mode: scheme
;; End:
